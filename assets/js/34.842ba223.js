(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{447:function(s,n,t){"use strict";t.r(n);var a=t(18),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"mac下自动保存-git-ssh-key-密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac下自动保存-git-ssh-key-密码"}},[s._v("#")]),s._v(" mac下自动保存 Git SSH Key 密码")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("首先尝试执行以下命令:\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global credential.helper osxkeychain\n\n如果以上方法没有生效,则执行\nssh-add -K\n或\nssh-add ~/.ssh/id_rsa\n手动添加 Key 到 keychain中\n\n但每次添加后，只在当前会话中有效，如果重启会话，会要求重新输入密码\n\n为了不用每次都要输入密码，可以把命令卸载.bashrc 或者.zshrc 中，使得每次启动终端时，可以自动执行\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions")]),s._v("\n\nname: Node.js CI\n\non:\n  push:\n    branches: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  pull_request:\n    branches: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\njobs:\n  build:\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("runs-on: ubuntu-latest\n\nstrategy:\n  matrix:\n    node-version: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(".x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nsteps:\n- name: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  uses: actions/checkout@v2\n\n- name: Use Node.js "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${{ matrix.node-version }")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  uses: actions/setup-node@v1\n  with:\n    node-version: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${{ matrix.node-version }")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n- name: "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" hexo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  run: "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v("\n    \n- name: hexo generate public files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  run: "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" clean\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" build\n \n- name: hexo deploy "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n  env:\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GH_TOKEN: ${{ secrets.GH_TOKEN }}")]),s._v("\n    HEXO_DEPLOY_PRIVATE_KEY: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${{ secrets.HEXO_DEPLOY_PRIVATE_KEY }")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  run: "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p ~/.ssh/\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HEXO_DEPLOY_PRIVATE_KEY")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ~/.ssh/id_rsa \n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("700")]),s._v(" ~/.ssh/id_rsa\n    ssh-agent "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n    ssh-add ~/.ssh/id_rsa\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhouqd"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhouqd1997@163.com"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global credential.helper osxkeychain\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" deploy\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);